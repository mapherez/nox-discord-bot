// Template for new slash commands
// This file shows two patterns:
// 1. Standalone commands (like ping.js)
// 2. Subcommand modules for the /nox command (place in commands/subcommands/)

// =============================================================================
// STANDALONE COMMAND TEMPLATE (for commands like /ping, /userinfo, etc.)
// Place this file directly in the commands/ directory
// =============================================================================

const { SlashCommandBuilder } = require('discord.js');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('commandname')  // Replace with your command name
    .setDescription('Command description here')
    // Add options here if needed:
    .addStringOption(option =>
      option.setName('text')
        .setDescription('Enter some text')
        .setRequired(false)),

  execute: async (interaction) => {
    // Your command logic here
    const text = interaction.options.getString('text') || 'Hello World!';
    await interaction.reply(text);
  }
};

// =============================================================================
// SUBCOMMAND MODULE TEMPLATE (for /nox subcommands)
// Place this file in the commands/subcommands/ directory
// Function name MUST match the filename (without .js)
// =============================================================================

/*
// Example: commands/subcommands/example.js

async function example(interaction, params) {
  // params contains any additional text after the subcommand
  // e.g., "/nox example some text here" -> params = "some text here"

  const embed = {
    color: 0x0099ff,
    title: 'Example Command',
    description: params ? `You provided: ${params}` : 'No additional parameters provided',
    timestamp: new Date(),
    footer: {
      text: 'Nox AI Assistant',
    },
  };

  await interaction.reply({ embeds: [embed] });
}

module.exports = { example };
*/

// =============================================================================
// HOW IT WORKS:
// 1. Create commands/subcommands/yourcommand.js
// 2. Export a function named exactly "yourcommand"
// 3. Add options in nox.js buildCommandWithSubcommands() if needed
// 4. That's it! The subcommand appears in Discord as /nox yourcommand
// =============================================================================